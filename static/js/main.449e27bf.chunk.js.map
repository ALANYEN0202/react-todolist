{"version":3,"sources":["TodoItem.js","constants/style.js","useTodos.js","useInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","$isDone","size","TodoButtonWrapper","Button","button","isDone","theme","colors","primary_white","primary_red","primary_green","RedButton","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","className","data-id","id","content","onClick","useTodos","useRef","useState","todoData","window","localStorage","getItem","JSON","parse","length","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","value","setValue","handleChange","e","target","useInput","filter","setFilter","map","handleButtonClick","handleFilterAll","handleFilterDone","handleFilterNotDone","handleClearAll","isFilterState","App","children","style","margin","textAlign","type","placeholder","onChange","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.449e27bf.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD } from \"./constants/style\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst TodoItemWrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  width: 70%;\n  border: 1px solid black;\n  & + & {\n    margin-top: 5px;\n  }\n`;\nconst TodoContent = styled.div`\n  color: rgba(123, 50, 10);\n  font-size: 20px;\n\n  ${(props) =>\n    props.$isDone &&\n    `\ntext-decoration: line-through;\n`}\n\n  ${(props) =>\n    props.size === \"XL\" &&\n    `\nfont-size: 30px;\n`}\n`;\nconst TodoButtonWrapper = styled.div``;\nconst Button = styled.button`\n  padding: 4px;\n  background: white;\n\n  & + & {\n    margin-left: 4px;\n  }\n\n  &:hover {\n    color: ${(props) =>\n      props.isDone\n        ? props.theme.colors.primary_white\n        : props.theme.colors.primary_white};\n    background: ${(props) =>\n      props.isDone\n        ? props.theme.colors.primary_red\n        : props.theme.colors.primary_green};\n    border-radius: 8px;\n    transition: border-radius 0.05s;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 20px;\n  }\n`;\nconst RedButton = styled(Button)`\n  color: red;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.primary_white};\n    background: ${(props) => props.theme.colors.primary_red};\n  }\n`;\n\n//  class TodoItemC extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.handleToggleClick = this.handleToggleClick.bind(this);\n//     this.handleDeleteClick = this.handleDeleteClick.bind(this);\n//   }\n//   handleToggleClick() {\n//     const { handleToggleIsDone, todo } = this.props;\n//     handleToggleIsDone(todo.id);\n//   }\n\n//   handleDeleteClick() {\n//     const { handleDeleteTodo, todo } = this.props;\n//     handleDeleteTodo(todo.id);\n//   }\n//   render() {\n//     const { size, todo } = this.props;\n//     return (\n//       <TodoItemWrapper\n//         className={`todoList ${todo.isDone ? \"completed\" : \"\"}`}\n//         data-id={todo.id}\n//       >\n//         <TodoContent $isDone={todo.isDone} size={size}>\n//           {todo.content}\n//         </TodoContent>\n//         <TodoButtonWrapper>\n//           <Button onClick={this.handleToggleClick}>\n//             {todo.isDone ? \"未完成\" : \"已完成\"}\n//           </Button>\n//           <RedButton onClick={this.handleDeleteClick}>刪除</RedButton>\n//         </TodoButtonWrapper>\n//       </TodoItemWrapper>\n//     );\n//   }\n// }\n\nexport default function TodoItem({\n  size,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n}) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper\n      className={`todoList ${todo.isDone ? \"completed\" : \"\"}`}\n      data-id={todo.id}\n    >\n      <TodoContent $isDone={todo.isDone} size={size}>\n        {todo.content}\n      </TodoContent>\n      <TodoButtonWrapper>\n        <Button onClick={handleToggleClick} isDone={todo.isDone}>\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>\n        <RedButton onClick={handleDeleteClick}>刪除</RedButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","export const MEDIA_QUERY_MD = \"@media screen and (max-width: 760px)\";\nexport const MEDIA_QUERY_LG = \"@media screen and (max-width: 1000px)\";\n","import { useState, useEffect, useRef } from \"react\";\nimport useInput from \"./useInput\";\nimport TodoItem from \"./TodoItem\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  const id = useRef(1);\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem(\"todos\") || \"\";\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      if (todoData.length > 0) {\n        id.current = todoData[0].id + 1;\n      }\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n  const { value, setValue, handleChange } = useInput();\n  const [filter, setFilter] = useState(\"all\");\n  const handleButtonClick = () => {\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id.current++;\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleFilterAll = () => {\n    setFilter(\"all\");\n  };\n\n  const handleFilterDone = () => {\n    setFilter(\"done\");\n  };\n\n  const handleFilterNotDone = () => {\n    setFilter(\"notDone\");\n  };\n\n  const handleClearAll = () => {\n    setTodos([]);\n  };\n\n  function isFilterState(filter, todos) {\n    if (filter === \"all\") {\n      return todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleDeleteTodo={handleDeleteTodo}\n          handleToggleIsDone={handleToggleIsDone}\n        />\n      ));\n    }\n    if (filter === \"done\") {\n      return todos\n        .filter((todo) => todo.isDone)\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ));\n    }\n    if (filter === \"notDone\") {\n      return todos\n        .filter((todo) => !todo.isDone)\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ));\n    }\n  }\n  return {\n    id,\n    todos,\n    setTodos,\n    value,\n    setValue,\n    handleChange,\n    handleButtonClick,\n    filter,\n    setFilter,\n    handleFilterAll,\n    handleFilterDone,\n    handleFilterNotDone,\n    handleClearAll,\n    isFilterState,\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useInput() {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return { value, setValue, handleChange };\n}\n","import useTodos from \"./useTodos\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction App() {\n  const {\n    todos,\n    value,\n    handleChange,\n    handleButtonClick,\n    filter,\n    handleFilterAll,\n    handleFilterDone,\n    handleFilterNotDone,\n    handleClearAll,\n    isFilterState,\n  } = useTodos();\n\n  function Button({ className, onClick, children }) {\n    return (\n      <button className={className} onClick={onClick} style={{ margin: \"5px\" }}>\n        {children}\n      </button>\n    );\n  }\n\n  // class Button extends React.Component {\n  //   render() {\n  //     const { onClick, children } = this.props;\n  //     return <button onClick={onClick}>{children}</button>;\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: \"center\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"todo\"\n          value={value}\n          onChange={handleChange}\n          style={{\n            width: \"50%\",\n          }}\n        />\n        <Button className=\"btn btn-primary\" onClick={handleButtonClick}>\n          Add todo\n        </Button>\n        <Button className=\"btn btn-info\" onClick={handleFilterAll}>\n          All\n        </Button>\n        <Button className=\"btn btn-success\" onClick={handleFilterDone}>\n          Done\n        </Button>\n        <Button className=\"btn btn-warning\" onClick={handleFilterNotDone}>\n          Not Done\n        </Button>\n        <Button className=\"btn btn-danger\" onClick={handleClearAll}>\n          Clear All\n        </Button>\n        {isFilterState(filter, todos)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\nconst theme = {\n  colors: {\n    primary_green: \"#00AA00\",\n    primary_red: \"#FF0000\",\n    primary_white: \"#FFFFFF\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}